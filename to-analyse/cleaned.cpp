void __cdecl main(int param_1)

{
  byte bVar1;
  bool bVar2;
  BOOL BVar3;
  HANDLE pvVar4;
  int iVar5;
  unsigned int *puVar6;
  unsigned int *puVar7;
  int iVar8;
  code *pcVar9;
  DWORD *pDVar10;
  int *piVar11;
  unsigned char auStack_3c[4];
  DWORD DStack_38;
  unsigned int uStack_34;
  unsigned int uStack_30;
  unsigned char uStack_2c;
  unsigned char uStack_2b;
  int iStack_28;
  unsigned int uStack_24;
  unsigned int uStack_20;
  unsigned short uStack_1c;
  unsigned char uStack_1a;
  unsigned int uStack_18;
  unsigned int uStack_14;
  unsigned short uStack_10;
  unsigned char uStack_e;
  uint local_c;

  local_c = DAT_00406018 ^ (uint)auStack_3c;

  if (param_1 != 2)
  {
    FUN_00401d10();
    FUN_004013d0();
    ___security_check_cookie_4(local_c ^ (uint)auStack_3c);
    return;
  }
  bVar2 = FUN_004010f0();
  if (bVar2)
    goto LAB_0040220e;
  FUN_00401d10();
  FUN_004013d0();

  uStack_24 = 0x50415d5e;
  uStack_20 = 0x4352476b;
  uStack_1c = 0x456f;
  uStack_1a = 0x2a;
  uStack_18 = 0x52435f5c;
  uStack_14 = 0x41504569;
  uStack_10 = 0x476d;
  uStack_e = 0x28;
  iVar5 = 0;
  DAT_004065d8 = 1;
  
  do
  {
    *(byte *)((int)&uStack_24 + iVar5) = *(byte *)((int)&uStack_24 + iVar5) ^ 0x2a;
    *(byte *)((int)&uStack_18 + iVar5) = *(byte *)((int)&uStack_18 + iVar5) ^ 0x28;
    iVar5 = iVar5 + 1;
  } while (iVar5 < 0xb);

  puVar7 = &uStack_18;
  puVar6 = &uStack_24;
  do
  {
    bVar1 = *(byte *)puVar6;
    bVar2 = bVar1 < *(byte *)puVar7;
    if (bVar1 != *(byte *)puVar7)
    {
    LAB_004020e1:
      iVar5 = (1 - (uint)bVar2) - (uint)(bVar2 != 0);
      goto LAB_004020e6;
    }
    if (bVar1 == 0)
      break;
    bVar1 = *(byte *)((int)puVar6 + 1);
    bVar2 = bVar1 < *(byte *)((int)puVar7 + 1);
    if (bVar1 != *(byte *)((int)puVar7 + 1))
      goto LAB_004020e1;
    puVar6 = (unsigned int *)((int)puVar6 + 2);
    puVar7 = (unsigned int *)((int)puVar7 + 2);
  } while (bVar1 != 0);
  iVar5 = 0;
LAB_004020e6:
  if (iVar5 == 0)
  {
    printf("%s\n", &uStack_24);
    Sleep(5);
    mechant_system_call();
    VirtualProtect(FUN_00401f30, 5, 0x40, &DStack_38);
    uStack_30 = 0xcc;
    uStack_2c = 0;
    uStack_2b = 0;
    uRam00401f38 = 0;
    uStack_34 = 0xccccd6ff;
    // WARNING: Read-only address (ram,0x00401f30) is written
    _FUN_00401f30 = 0xccccd6ff;
    // WARNING: Read-only address (ram,0x00401f34) is written
    uRam00401f34 = 0xcc;
    // WARNING: Read-only address (ram,0x00401f38) is written
    VirtualProtect(FUN_00401f30, 5, DStack_38, &DStack_38);
    BVar3 = IsDebuggerPresent();
    if (BVar3 != 0)
    {
    LAB_00402194:
      mechant_system_call();
      // WARNING: Subroutine does not return
      exit(1);
    }

    printf(&DAT_00404328);
    pcVar9 = GetCurrentProcess_exref;
  }

  iVar5 = 0;
  DAT_004065d8 = 1;
  do
  {
    *(byte *)((int)&uStack_24 + iVar5) = *(byte *)((int)&uStack_24 + iVar5) ^ 0x2a;
    iVar8 = 100;
    do
    {
      iVar8 = iVar8 + -1;
    } while (iVar8 != 0);
    *(byte *)((int)&uStack_18 + iVar5) = *(byte *)((int)&uStack_18 + iVar5) ^ 0x28;
    iVar5 = iVar5 + 1;
  } while (iVar5 < 0xb);
LAB_0040220e:
  ___security_check_cookie_4(local_c ^ (uint)auStack_3c);
  return;
}