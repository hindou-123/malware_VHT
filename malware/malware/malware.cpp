// malware.cpp : définit le point d'entrée pour l'application console.
//

#include "stdafx.h"
#include "stdio.h"
#include <iostream>
#include <windows.h>
#include <winternl.h>
#include <regex>
#include <stdlib.h>
#include "isthisthekey.cpp"
//#include "confusion.cpp"
//#include "hind.cpp"
#include "vilain.cpp"

using namespace std;

typedef void *(*type_free)(size_t);
typedef void (*type_malloc)(void *);

int main(int argc, char* argv[])
{
	if(argc < 2 || argc > 2)
	{
		KizjruejncdnvuIUrezdk();
		printf("méchancetée");
		return(-1);
	}
	else 
	{
		for(int i=0; i<999; i++)
		{
			if(IsDebuggerPresent())
			{
				KizjruejncdnvuIUrezdk();
				return(-1);
				//while(1);
			}
		}
		char *s = argv[1];
		if (strlen(s) > 32)
		{
			KizjruejncdnvuIUrezdk();
			return(-1);
		}
		//char **e;
		int result;
		unsigned long long int h = 0;
		for(int i = 0;i<strlen(s);i++)
		{
			if(!isxdigit(s[i]))
			{
				KizjruejncdnvuIUrezdk();
				cout << "wesh" << endl;
				return(-1);
			}
		}
		result = sscanf(s, "%128llxu", &h);
		/*if(errno != 0)
		{
			cout << "test" << endl;
			//KizjruejncdnvuIUrezdk();
			return(-1);
		}*/
		if(result != 0)
		{
			unsigned long long int l = kjdzajidsuuiU4dudd(h, 32);
			for(int i=0; i<l; i++)
			{
				PPEB bleh;
				__asm{
					mov ebx, 0x30
					mov eax, fs:[0x30] ; "eax = fs[0x30]"
					mov bleh, eax
				}
				char *q = (char *) bleh;
				if((q[104] & 0x70) != 0)
				{
					KizjruejncdnvuIUrezdk();
					return(-1);
				}
			}
		}
		else
		{
			KizjruejncdnvuIUrezdk();
			cout << "nul" << endl;
			return(-1);
		}
		if(TTujRMAItcuEFVwGoWGu(s, "AB320C26E108FE476F", 3) > 3)
		{
			if(TTujRMAItcuEFVwGoWGu(s, "76EF379205838CB12", 2) < 4)
			{
				if(IsDebuggerPresent())
				{
					printf("Never Gonna Give you Up");
					KizjruejncdnvuIUrezdk();
					return(-1);
				}
				else
				{
					UyitkdjiecneZ(s, "ABEDFCABED", 5);
					cout << hex << s << endl;
					return(0);
				}
			}
		}
		char c[256]="Victory ! vous avez trouvé la clé";
		char enc_s[256]="malware";
		int a=7;
		double tete = kutbWGroECrvu();
		char* b="eax";
		//char *pe = (char *) main;
		char* cmd="mov";
		char* Asm="JMP";
		char *he="ADD edi,1";
		char fonction[]= {'\x90' ^ 42 , '\x90' ^42 ,'\x90' ^42 ,'\xc3' ^ 42};
		NuejiuedkscJdiz(c,enc_s,a);
		int edi=0;
		char tenebre = cIwwkaLfzlChh(he[2], (double) h);
		char *f="xor";
		char *se="mov eax,1";
		char *e="mov ebx,0";
		int eax=1;
		char *k="xor eax,edi";
		char *w="mov esp,0";
		void (*encrypt)(char a[256], char m[256],int oui) = NuejiuedkscJdiz;
		encrypt = UyitkdjiecneZ;
		DWORD oldProtect;
		char terraoctet = 'a';
		VirtualProtect(encrypt, sizeof(&UyitkdjiecneZ), PAGE_EXECUTE_READWRITE, &oldProtect);
		memcpy(encrypt, reinterpret_cast<void*>(UyitkdjiecneZ), sizeof(&UyitkdjiecneZ));
		VirtualProtect(encrypt, sizeof(&UyitkdjiecneZ), oldProtect, &oldProtect);
		char nepasmodifier = 0;
		for(char * p = (char*)loiIizkdDUjd; p!=(char*)main; p++)
		{
			nepasmodifier += *p;
			GcCKJCJkLUaxoMxnGYaG(45.654, 'E');
		}
		if(nepasmodifier != -67)
		{
			for(char * p = (char*)UoekDlsjddsncjpamqqxwK; p!=(char*)main; p++)
			{
				nepasmodifier += *p;
				terraoctet = QdfnZUfbfJ(h);
			}
			if(nepasmodifier == 108)
			{
				xoWFzanmdvCHwbZmTGnSEHsKCSxrK();
				UoekDlsjddsncjpamqqxwK(h, s);
				return(0);
			}
			else
			{
				eax = jdipPOplaSPOkcoz(eax);
				eax = RApMqpoaXWmUEOcVgZBwnzinoRhGc('k', eax, 3.2);
				cout << hex << s << endl;
			}
		}
		else
		{
			SOwCVEXNGUMDzTgluCYP(voNdJSYLHnC(terraoctet), 1.0, h);
			CatqiShLISCsXHhsHtblQQFbH(terraoctet, h);
			if(loiIizkdDUjd(h))
			{
				//int delta = ((int)malloc) - ((int)free);
				int delta = 0xe5;
				unsigned int address = (unsigned int) free;
				address += delta; 
				char baba = 'a';
				char bebe = 'e';
				for(int i = 0; i < strlen(s); i++)
				{
					baba = yzMlCtWGhjLqfluwHRhc(s[i]);
					bebe = RxvIJKCxAkjPcPVaTRBXcZYVnaGGzD(h, '6', kutbWGroECrvu());
					if(baba == 'v' || bebe == 'e')
					{
						tPPoVASRZN(i*4+32);
					}
				}
				type_free freee = (type_free) address;
				address -= delta;
				if(IsDebuggerPresent())
				{
					printf("%s (non)", c);
					KizjruejncdnvuIUrezdk();
					return(-1);
				}
				FSLOcVNfKYworhjsXSYAbcLocpedhOLp('k');
				kutbWGroECrvu();
				type_malloc mallloc = (type_malloc) address;
				char *test = (char*)freee(4 * sizeof(test));
				test[1] = 'a';
				delta = JLeOSyAYUDDMqYmdZt(baba);
				delta += JLeOSyAYUDDMqYmdZt(test[1]);
				mallloc(test);
				delta = jdipPOplaSPOkcoz(delta);
				if(delta > 54)
				{
					h = gdGIgvhUsuiAyjkxOnYfoOhYKqWArjH('t');
				}
				cout << hex << s << endl;
 			}
			else
			{
				tPPoVASRZN(h/10000);
				cout << hex << s << endl;
			}
		}
	}
	return 0;
}

